import chisel3._
import chisel3.util._
import chisel3.iotesters
import chisel3.iotesters.PeekPokeTester
import java.util

object Programs{

  //Test program that writes the address number to that specific address up to 800
  val program3 = Array(
    "b000000_00000_00000_0000000000000000".U(32.W), //NOP

    "b101100_00001_00000_0000000000000000".U(32.W), //MOVI R1 0
    "b101100_00010_00000_0000001100100000".U(32.W), //MOVI R2 800
    "b101010_00001_00001_0000000000000000".U(32.W), //STOR R1 R1 0
    "b010011_00001_00000_0000000000000000".U(32.W), //INC  R1
    "b111000_00001_00010_0000000000000011".U(32.W), //JNE  R1 R2 3

    "b111111_00000_00000_0000000000000000".U(32.W)  //HALT
  )

  //The erosion algorithm itself
  val program1 = Array(
    "b000000_00000_00000_0000000000000000".U(32.W), //NOP

    // Sæt konstant
    "b101000_00001_00000_0000000000000001".U(32.W),

    // Erode hjørner
    "b101010_00000_00000_0000000110010000".U(32.W),
    "b101010_00000_00000_0000000110100100".U(32.W),
    "b101010_00000_00000_0000011000111111".U(32.W),
    "b101010_00000_00000_0000011000011000".U(32.W),

    // Sæt konstanter til multiplilation
    "b101000_10100_00000_0000000000010100".U(32.W),
    "b101000_01010_00000_0000000000000001".U(32.W),

    // Sæt konstanter til loops
    "b101000_01001_00000_0000000000010100".U(32.W),
    "b101000_01000_00000_0000000000000010".U(32.W),

    //Under er den 0000 0000 0000 1010. operation. #1LOOP

    // Erode Øverste og nederste kant
    "b101010_00000_01000_0000000110010000".U(32.W), //#1LOOP (10)
    "b101010_00000_01000_0000001100001101".U(32.W),

    // Erode Venstre og højre kant
    "b010101_01010_10100_0100000000000000".U(32.W),
    "b101010_00000_01010_0000000101111101".U(32.W),
    "b101010_00000_01010_0000000110010000".U(32.W),

    // Sæt konstanter til indre loop
    "b101000_10000_00000_0000000000000001".U(32.W),
    "b101000_10001_00000_0000000000010011".U(32.W),
    "b101000_10011_00000_0000000000000001".U(32.W),
    "b101000_10100_00000_0000000000000001".U(32.W),

    //Under er den 0000 0000 0001 0011. operation. #2LOOP

    // Sæt pi0el der skal erodes
    "b010101_10010_10000_1010000000000000".U(32.W), //#2LOOP (19)
    "b010100_10010_10010_0100000000000000".U(32.W),

    //Spring hvis pi0el er sort
    "b111100_10010_00000_0000000000011111".U(32.W),

    // Tjek nedre pi0el
    "b100100_10011_10010_0000000000010100".U(32.W),
    "b111100_10011_00000_0000000000100100".U(32.W),

    // Tjek øvre pi0el
    "b100100_10011_10010_1111111111101100".U(32.W),
    "b111100_10011_00000_0000000000100100".U(32.W),

    // Tjek højre pi0el
    "b100100_10011_10010_0000000000000001".U(32.W),
    "b111100_10011_00000_0000000000100100".U(32.W),

    // Tjek venstre pi0el
    "b100100_10011_10010_1111111111111111".U(32.W),
    "b111100_10011_00000_0000000000100100".U(32.W),

    // Lad vær med at erode'e pi0el'en
    "b101010_00001_10010_0000000110010000".U(32.W),

    //Under er den 0000 0000 0001 1110. operation. #2LOOPINC

    // Inkrement indre loop
    "b010011_10000_00000_0000000000000000".U(32.W), //#2LOOPINC (31)
    "b111000_10000_10001_0000000000010011".U(32.W),

    // Inkrement ydre loop
    "b010011_01000_00000_0000000000000000".U(32.W),
    "b111000_01000_01001_0000000000001010".U(32.W),

    "b111111_00000_00000_0000000000000000".U(32.W), //HALT

    //Under er den 0000 0000 0010 0011. operation. #ERODE

    // Erode pi0el
    "b101010_00000_10010_0000000110010000".U(32.W), //#ERODE (36)
    "b110000_00000_00000_0000000000011111".U(32.W)
  )

  val program2 = Array(
   // "b000000_00000_00000_0000000000000000".U(32.W), //NOP
    "b101100_00001_00000_0000000000000010".U(32.W), //MOVI
    "b101000_00010_00001_0000000000000000".U(32.W), //MOV
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101110_00001_00000_0000000000000001".U(32.W), //MOVU
    "b101010_00001_00000_0000000000000001".U(32.W), //STOR
    "b101010_00010_00010_0000000000000000".U(32.W), //STOR
    "b101011_00001_00010_0000000000000000".U(32.W), //LOAD
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b101010_00001_00000_0000000000000011".U(32.W), //STOR
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000101".U(32.W), //MOVI
    "b010111_00001_00000_0000000000000000".U(32.W), //NEG
    "b010100_00011_00001_0001000000000000".U(32.W), //ADD
    "b101010_00011_00000_0000000000000100".U(32.W), //STOR
    "b010011_00011_00000_0000000000000000".U(32.W), //INC
    "b101010_00011_00000_0000000000000101".U(32.W), //STOR
    "b100110_00011_00010_0000000000000001".U(32.W), //ADDIU
    "b101010_00011_00000_0000000000000110".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b010010_00100_00011_0000100000000000".U(32.W), //DIVU
    "b010000_00100_00100_0001000000000000".U(32.W), //ADDU
    "b101010_00100_00000_0000000000000111".U(32.W), //STOR
    "b101100_00001_00000_0000000000000100".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000010".U(32.W), //MOVI
    "b010001_00011_00001_0001000000000000".U(32.W), //MULU
    "b101010_00011_00000_0000000000001000".U(32.W), //STOR
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b010101_00011_00001_0001000000000000".U(32.W), //MUL
    "b010011_00011_00000_0000000000000000".U(32.W), //INC
    "b100100_00100_00011_0000000000000001".U(32.W), //ADDI
    "b101100_00001_00000_0000000000000010".U(32.W), //MOVI
    "b010110_00101_00100_0000100000000000".U(32.W), //DIV
    "b100100_00110_00101_0000000000001100".U(32.W), //ADDI
    "b101010_00110_00000_0000000000001001".U(32.W), //STOR
    "b101100_00001_00000_0000000000000000".U(32.W), //MOVI
    "b101100_00010_00000_0000000001100011".U(32.W), //MOVI
    "b011001_00011_00010_0000100000000000".U(32.W), //AND
    "b100100_00100_00011_0000000000001010".U(32.W), //ADDI
    "b101010_00100_00000_0000000000001010".U(32.W), //STOR
    "b100001_00101_00100_0000000000000011".U(32.W), //ANDI
    "b100100_00101_00101_0000000000001001".U(32.W), //ADDI
    "b101010_00101_00000_0000000000001011".U(32.W), //STOR
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000010".U(32.W), //MOVI
    "b011000_00011_00001_0001000000000000".U(32.W), //OR
    "b100100_00011_00011_0000000000001001".U(32.W), //ADDI
    "b101010_00011_00000_0000000000001100".U(32.W), //STOR
    "b010011_00010_00000_0000000000000000".U(32.W), //INC
    "b011010_00011_00001_0001000000000000".U(32.W), //XOR
    "b011011_00011_00000_0000000000000000".U(32.W), //NOT
    "b100011_00100_00011_0000000000000001".U(32.W), //BSR
    "b100001_00101_00100_0000000000001101".U(32.W), //ANDI
    "b010011_00101_00000_0000000000000000".U(32.W), //INC
    "b101010_00101_00000_0000000000001101".U(32.W), //STOR
    "b101100_00001_00000_0000000000000111".U(32.W), //MOVI
    "b100010_00010_00001_0000000000000001".U(32.W), //BSL
    "b101010_00010_00000_0000000000001110".U(32.W), //STOR
    "b101100_00001_00000_0000000000000000".U(32.W), //MOVI
    "b101100_00010_00000_0000000000001111".U(32.W), //MOVI
    "b110000_00000_00000_0000000000111101".U(32.W), //JMP
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b111000_00001_00010_0000000000111101".U(32.W), //JNE
    "b101010_00001_00000_0000000000001111".U(32.W), //STOR
    "b101100_00001_00000_0000000000001110".U(32.W), //MOVI
    "b111100_00001_00010_0000000001000101".U(32.W), //JEQ
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b111100_00001_00010_0000000001000101".U(32.W), //JEQ
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b101010_00001_00000_0000000000010000".U(32.W), //STOR
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b110110_00000_00000_0000000001001100".U(32.W), //JAL
    "b110000_00000_00000_0000000001001110".U(32.W), //JMP
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b110000_00000_00000_0000000001001110".U(32.W), //JMP
    "b101100_00001_00000_0000000000010001".U(32.W), //MOVI
    "b110100_00000_00000_0000000000000000".U(32.W), //RET
    "b101010_00001_00000_0000000000010001".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000101".U(32.W), //MOVI
    "b011110_00011_00001_0001000000000000".U(32.W), //SLU
    "b011111_00100_00010_0000000000001000".U(32.W), //SLUI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011100_00101_00010_0000100000000000".U(32.W), //SLT
    "b011101_00110_00010_1111111111111111".U(32.W), //SLI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011110_00111_00010_0000100000000000".U(32.W), //SLU
    "b011111_01000_00010_0000000000000100".U(32.W), //SLUI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011100_01001_00001_0001000000000000".U(32.W), //SLT
    "b011101_01010_00010_1111111111110111".U(32.W), //SLI
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b011010_00111_00111_0000100000000000".U(32.W), //XOR
    "b011010_01000_01000_0000100000000000".U(32.W), //XOR
    "b011010_01001_01001_0000100000000000".U(32.W), //XOR
    "b011010_01010_01010_0000100000000000".U(32.W), //XOR
    "b010000_00010_00011_0010000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0010100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0011000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0011100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0100000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0100100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0101000000000000".U(32.W), //ADDU
    "b100110_00010_00010_0000000000001010".U(32.W), //ADDIU
    "b101010_00010_00000_0000000000010010".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b011101_00010_00001_0000000000000011".U(32.W), //SLI
    "b100110_00011_00010_0000000000010011".U(32.W), //ADDIU
    "b101010_00011_00000_0000000000010011".U(32.W), //STOR

    "b000000_00000_00000_0000000000000000".U(32.W), //NOP
    "b111111_00000_00000_0000000000000000".U(32.W) //HALT
  )

  val program4 = Array(
    "b000000_00000_00000_0000000000000000".U(32.W), //NOP
    "b101100_00001_00000_0000000000000010".U(32.W), //MOVI
    "b101000_00010_00001_0000000000000000".U(32.W), //MOV
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101110_00001_00000_0000000000000001".U(32.W), //MOVU
    "b101010_00001_00000_0000000000000001".U(32.W), //STOR
    "b101010_00010_00010_0000000000000000".U(32.W), //STOR
    "b101011_00001_00010_0000000000000000".U(32.W), //LOAD
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b101010_00001_00000_0000000000000011".U(32.W), //STOR
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000101".U(32.W), //MOVI
    "b010111_00001_00000_0000000000000000".U(32.W), //NEG
    "b010100_00011_00001_0001000000000000".U(32.W), //ADD
    "b101010_00011_00000_0000000000000100".U(32.W), //STOR
    "b010011_00011_00000_0000000000000000".U(32.W), //INC
    "b101010_00011_00000_0000000000000101".U(32.W), //STOR
    "b100110_00011_00010_0000000000000001".U(32.W), //ADDIU
    "b101010_00011_00000_0000000000000110".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b010010_00100_00011_0000100000000000".U(32.W), //DIVU
    "b010000_00100_00100_0001000000000000".U(32.W), //ADDU
    "b101010_00100_00000_0000000000000111".U(32.W), //STOR
    "b101100_00001_00000_0000000000000100".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000010".U(32.W), //MOVI
    "b010001_00011_00001_0001000000000000".U(32.W), //MULU
    "b101010_00011_00000_0000000000001000".U(32.W), //STOR
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b010101_00011_00001_0001000000000000".U(32.W), //MUL
    "b010011_00011_00000_0000000000000000".U(32.W), //INC
    "b010100_00100_00011_0000000000000001".U(32.W), //ADDI
    "b101100_00001_00000_0000000000000010".U(32.W), //MOVI
    "b010110_00101_00100_0000100000000000".U(32.W), //DIV
    "b010100_00110_00101_0000000000001100".U(32.W), //ADDI
    "b101010_00110_00000_0000000000001001".U(32.W), //STOR
    "b101100_00001_00000_0000000000000000".U(32.W), //MOVI
    "b101100_00010_00000_0000000001100011".U(32.W), //MOVI
    "b011001_00011_00010_0000100000000000".U(32.W), //AND
    "b010100_00100_00011_0000000000001010".U(32.W), //ADDI
    "b101010_00100_00000_0000000000001010".U(32.W), //STOR
    "b100001_00101_00100_0000000000000011".U(32.W), //ANDI
    "b010100_00101_00101_0000000000001001".U(32.W), //ADDI
    "b101010_00101_00000_0000000000001011".U(32.W), //STOR
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000010".U(32.W), //MOVI
    "b011000_00011_00001_0001000000000000".U(32.W), //OR
    "b010100_00011_00011_0000000000001001".U(32.W), //ADDI
    "b101010_00011_00000_0000000000001100".U(32.W), //STOR
    "b010011_00010_00000_0000000000000000".U(32.W), //INC
    "b011010_00011_00001_0001000000000000".U(32.W), //XOR
    "b011011_00011_00000_0000000000000000".U(32.W), //NOT
    "b100011_00100_00011_0000000000000001".U(32.W), //BSR
    "b100001_00101_00100_0000000000001101".U(32.W), //ANDI
    "b101010_00101_00000_0000000000001101".U(32.W), //STOR
    "b101100_00001_00000_0000000000000111".U(32.W), //MOVI
    "b100010_00010_00001_0000000000000001".U(32.W), //BSL
    "b101010_00010_00000_0000000000001110".U(32.W), //STOR
    "b101100_00001_00000_0000000000000000".U(32.W), //MOVI
    "b101100_00010_00000_0000000000001111".U(32.W), //MOVI
    "b110000_00000_00000_0000000000111101".U(32.W), //JMP
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b111000_00001_00010_0000000000111101".U(32.W), //JNE
    "b101010_00001_00000_0000000000001111".U(32.W), //STOR
    "b101100_00001_00000_0000000000001110".U(32.W), //MOVI
    "b111100_00001_00010_0000000001000101".U(32.W), //JEQ
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b111100_00001_00010_0000000001000101".U(32.W), //JEQ
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b010011_00001_00000_0000000000000000".U(32.W), //INC
    "b101010_00001_00000_0000000000010000".U(32.W), //STOR
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b110110_00000_00000_0000000001001100".U(32.W), //JAL
    "b110000_00000_00000_0000000001001110".U(32.W), //JMP
    "b101100_00001_00000_0000000001100011".U(32.W), //MOVI
    "b110000_00000_00000_0000000001001110".U(32.W), //JMP
    "b101100_00001_00000_0000000000010001".U(32.W), //MOVI
    "b110100_00000_00000_0000000000000000".U(32.W), //RET
    "b101010_00001_00000_0000000000010001".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b101100_00010_00000_0000000000000101".U(32.W), //MOVI
    "b011110_00011_00001_0001000000000000".U(32.W), //SLU
    "b011111_00100_00010_0000000000001000".U(32.W), //SLUI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011100_00101_00010_0000100000000000".U(32.W), //SLT
    "b011101_00110_00010_1111111111111111".U(32.W), //SLI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011110_00111_00010_0000100000000000".U(32.W), //SLU
    "b011111_01000_00010_0000000000000100".U(32.W), //SLUI
    "b010111_00010_00000_0000000000000000".U(32.W), //NEG
    "b011100_01001_00001_0001000000000000".U(32.W), //SLT
    "b011101_01010_00010_1111111111110111".U(32.W), //SLI
    "b101100_00001_00000_0000000000000001".U(32.W), //MOVI
    "b011010_00111_00111_0000100000000000".U(32.W), //XOR
    "b011010_01000_01000_0000100000000000".U(32.W), //XOR
    "b011010_01001_01001_0000100000000000".U(32.W), //XOR
    "b011010_01010_01010_0000100000000000".U(32.W), //XOR
    "b010000_00010_00011_0010000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0010100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0011000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0011100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0100000000000000".U(32.W), //ADDU
    "b010000_00010_00010_0100100000000000".U(32.W), //ADDU
    "b010000_00010_00010_0101000000000000".U(32.W), //ADDU
    "b100110_00010_00010_0000000000001010".U(32.W), //ADDIU
    "b101010_00010_00000_0000000000010010".U(32.W), //STOR
    "b101100_00001_00000_0000000000000011".U(32.W), //MOVI
    "b011101_00010_00001_0000000000000011".U(32.W), //SLI
    "b100110_00011_00010_0000000000010011".U(32.W), //ADDIU
    "b101010_00011_00000_0000000000000000".U(32.W), //STOR
    "b000000_00000_00000_0000000000000000".U(32.W), //NOP
    "b111111_00000_00000_0000000000000000".U(32.W) //HALT
  )
}